{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/facebook-app-logo.svg","assets/images/internet.svg","assets/images/vk.svg","assets/images/twitter.svg","assets/images/instagram.svg","assets/images/youtube.svg","assets/images/github.svg","assets/images/arni.png","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","Preloader","className","s","avaPlusDescription","photos","large","userPhoto","alt","src","arnold","isOwner","type","target","files","length","savePhoto","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","socialNetworks","contacts","facebook","href","socialIcons","website","vk","twitter","instagram","youtube","github","mainLink","Post","item","message","d18","likesCount","maxLength10","maxLengthCreator","AddNewPostFormWrapper","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","name","validate","required","placeholder","MyPosts","React","memo","postsElement","posts","map","p","key","Math","random","myPosts","formData","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","postText","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserInformation","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.05b0dc22.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1Yimg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avaPlusDescription\":\"ProfileInfo_avaPlusDescription__3dcfc\",\"userPhoto\":\"ProfileInfo_userPhoto__1CtiL\",\"socialIcons\":\"ProfileInfo_socialIcons__9AfKL\"};","module.exports = __webpack_public_path__ + \"static/media/facebook-app-logo.ffa50fc4.svg\";","module.exports = __webpack_public_path__ + \"static/media/internet.53b9845e.svg\";","module.exports = __webpack_public_path__ + \"static/media/vk.9eaa3aa7.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.dd90206d.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.b1c58ee1.svg\";","module.exports = __webpack_public_path__ + \"static/media/youtube.a6372485.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.e4f2d6b0.svg\";","module.exports = __webpack_public_path__ + \"static/media/arni.59ff89f9.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2ZDdM\",\"d18\":\"Post_d18__cXaRW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__25ieO\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div><span onDoubleClick={activateMode}>{props.status || \"--------\"}</span></div>}\r\n\r\n            {editMode && <div>\r\n                <input autoFocus={true}\r\n                       onBlur={deactivateEditMode}\r\n                       onChange={onStatusChange}\r\n                       value={status}/>\r\n            </div>}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n\r\n// Колесо, стойки, подтягивания на турнике, выпрыжки колени к плечам, Лотос, закрытый лотос.","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport facebook from \"../../../assets/images/facebook-app-logo.svg\";\r\nimport website from \"../../../assets/images/internet.svg\";\r\nimport vk from \"../../../assets/images/vk.svg\";\r\nimport twitter from \"../../../assets/images/twitter.svg\";\r\nimport instagram from \"../../../assets/images/instagram.svg\";\r\nimport youtube from \"../../../assets/images/youtube.svg\";\r\nimport github from \"../../../assets/images/github.svg\";\r\nimport arnold from \"../../../assets/images/arni.png\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const mainPhotoSelected = (e) => {\r\n        if (e.target.files.length)\r\n        {props.savePhoto(e.target.files[0])}\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.avaPlusDescription}>\r\n                {props.profile.photos.large ? <img className={s.userPhoto} alt={\"\"} src={props.profile.photos.large}/> :\r\n                    <img className={s.userPhoto} src={arnold} alt=\"Arni\"/>}\r\n                {props.isOwner && <input type={\"file\"} onChange={mainPhotoSelected}/>}\r\n\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n\r\n                <p>{props.profile.fullName}</p>\r\n                <p>{props.profile.aboutMe}</p>\r\n                {props.profile.lookingForAJob && <p>Ищу работу: {props.profile.lookingForAJobDescription}</p>}\r\n            </div>\r\n            <div className={s.socialNetworks}>\r\n                {props.profile.contacts.facebook &&\r\n                <a href={props.profile.contacts.facebook}><img alt={\"facebook icon\"} className={s.socialIcons}\r\n                                                               src={facebook}/></a>}\r\n                {props.profile.contacts.website &&\r\n                <a href={props.profile.contacts.website}><img alt={\"website icon\"} className={s.socialIcons}\r\n                                                              src={website}/></a>}\r\n                {props.profile.contacts.vk &&\r\n                <a href={props.profile.contacts.vk}><img alt={\"vk icon\"} className={s.socialIcons} src={vk}/></a>}\r\n                {props.profile.contacts.twitter &&\r\n                <a href={props.profile.contacts.twitter}><img alt={\"twitter icon\"} className={s.socialIcons}\r\n                                                              src={twitter}/></a>}\r\n                {props.profile.contacts.instagram &&\r\n                <a href={props.profile.contacts.instagram}><img alt={\"instagram icon\"} className={s.socialIcons}\r\n                                                                src={instagram}/></a>}\r\n                {props.profile.contacts.youtube &&\r\n                <a href={props.profile.contacts.youtube}><img alt={\"youtube icon\"} className={s.socialIcons}\r\n                                                              src={youtube}/></a>}\r\n                {props.profile.contacts.github &&\r\n                <a href={props.profile.contacts.github}><img alt={\"github icon\"} className={s.socialIcons}\r\n                                                             src={github}/></a>}\r\n                {props.profile.contacts.mainLink && <a href={props.profile.contacts.mainLink}>Основная ссылка</a>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img\r\n        src=\"https://demo.phpgang.com/crop-images/demo_files/pool.jpg\"\r\n        alt=\"\"\r\n      />\r\n      {props.message}\r\n      <div>\r\n        <span className={s.d18}>likes {props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Post;\r\n","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {TextArea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\n\r\nlet AddNewPostForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea}\r\n                       name=\"newPostText\"\r\n                       validate={[required, maxLength10]}\r\n                       placeholder={\"Post message\"}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Send post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormWrapper = reduxForm({form: 'AddNewPostForm'})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElement = props.posts.map((p) => (\r\n\r\n        <Post key={Math.random()} message={p.message} likesCount={p.likesCount}/>\r\n\r\n    ));\r\n\r\n    const onSubmit = (formData) => {\r\n        props.addPost(formData.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.myPosts}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <AddNewPostFormWrapper onSubmit={onSubmit}/>\r\n            </div>\r\n            <div className={s.posts}>{postsElement}</div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default MyPosts;\r\n","\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (postText) => {\r\n            dispatch(addPostActionCreator(postText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport s from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nlet Profile = (props) => {\r\n    return <div className={s.profile}>\r\n        <ProfileInfo isOwner={props.isOwner}\r\n                     profile={props.profile}\r\n                     status={props.status}\r\n                     updateStatus={props.updateStatus}\r\n                     savePhoto={props.savePhoto}\r\n        />\r\n        <MyPostsContainer/>\r\n    </div>\r\n\r\n\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserInformation, savePhoto, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserInformation(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props}\r\n                isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n            savePhoto={this.props.savePhoto}/>\r\n        );\r\n    }\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserInformation, getStatus, updateStatus, savePhoto}),\r\n    withRouter,\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}