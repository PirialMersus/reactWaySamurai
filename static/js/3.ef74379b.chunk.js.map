{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","assets/images/arni.png","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","createField","Input","type","TextArea","Object","keys","contacts","map","key","className","s","contact","style","formSummaryError","ProfileData","isOwner","goToEditMode","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","socialNetworks","contactTitle","contactValue","onClick","Contact","href","ProfileInfo","Preloader","avaPlusDescription","photos","large","userPhoto","alt","src","arnold","target","files","length","savePhoto","initialValues","formData","saveProfile","then","Post","item","message","d18","likesCount","maxLength10","maxLengthCreator","AddNewPostFormWrapper","Field","component","name","validate","required","placeholder","MyPosts","React","memo","postsElement","posts","p","Math","random","myPosts","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","postText","actions","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserInformation","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,mBAAqB,wCAAwC,UAAY,+BAA+B,YAAc,iCAAiC,QAAU,+B,oBCAnLD,EAAOC,QAAU,CAAC,QAAU,2B,oBCD5BD,EAAOC,QAAU,IAA0B,kC,wCCC3CD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,IAAM,oB,oBCAlDD,EAAOC,QAAU,CAAC,QAAU,2B,0KCwCbC,EAvCgB,SAACC,GAAW,IAAD,EAENC,oBAAS,GAFH,mBAE/BC,EAF+B,KAErBC,EAFqB,OAGVF,mBAASD,EAAMI,QAHL,mBAG/BA,EAH+B,KAGvBC,EAHuB,KAKtCC,qBAAW,WACPD,EAAUL,EAAMI,UACjB,CAACJ,EAAMI,SAgBV,OACI,8BACMF,GACF,6BAAK,uCAAe,0BAAMK,cAjBb,WACjBJ,GAAY,KAgBgDH,EAAMI,QAAU,aAEvEF,GAAY,6BACT,2BAAOM,WAAW,EACXC,OAjBQ,WACvBN,GAAY,GACZH,EAAMU,aAAaN,IAgBJO,SAbI,SAACC,GACpBP,EAAUO,EAAEC,cAAcC,QAaXA,MAAOV,O,kCCqBfW,EAFkBC,YAAU,CAACC,KAAM,gBAAjBD,EA9CT,SAAC,GAAoC,IAAnCE,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,MAE7C,OACI,0BAAMC,SAAUH,GACZ,6BACI,0CAAmBI,YAAY,YAAa,WAAY,GAAIC,MAGhE,6BAAK,iDACAD,YAAY,GAAI,iBAAkB,GAAIC,IAAO,CAACC,KAAM,cAGzD,6BAAK,uDACAF,YAAY,yBAA0B,4BAA6B,GAAIG,IAAU,CAACD,KAAM,cAG7F,6BACI,yCACCF,YAAY,WAAY,UAAW,GAAIG,IAAU,CAACD,KAAM,cAK7D,6BACI,yCADJ,IACuBE,OAAOC,KAAKR,EAAQS,UAAUC,KAAI,SAAAC,GACrD,OAAO,yBAAKA,IAAKA,EAAKC,UAAWC,IAAEC,SAC/B,2BAAIH,EAAJ,MACCR,YAAYQ,EAAK,YAAcA,EAAK,GAAIP,UAKjD,6BACI,yCAGHH,GAAS,yBAAKW,UAAWG,IAAMC,kBAC3Bf,OCiBXgB,G,OAAc,SAAC,GAAsC,IAArCjB,EAAoC,EAApCA,QAASkB,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,aACpC,OACI,6BACI,6BACI,0CAAkB,8BAAOnB,EAAQoB,WAErC,6BAEI,6BACI,yCAAiB,8BAAOpB,EAAQqB,UAEnCrB,EAAQsB,gBACT,6BAAK,wFAAL,IAAyB,+CACxBtB,EAAQuB,2BAA6B,6BAAK,wFAAL,IAAyB,8BAAOvB,EAAQuB,4BAC9E,yBAAKX,UAAWC,IAAEW,gBACd,yCADJ,IACuBjB,OAAOC,KAAKR,EAAQS,UAAUC,KAAI,SAAAC,GAEjD,GAAIX,EAAQS,SAASE,GACjB,OAAO,kBAAC,EAAD,CAASc,aAAcd,EAAKA,IAAKA,EAAKe,aAAc1B,EAAQS,SAASE,SAKvFO,GAAW,6BACR,4BAAQS,QAASR,GAAjB,aAQdS,EAAU,SAAC,GAAkC,IAAjCH,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,aAC5B,OAAO,yBAAKd,UAAWC,IAAEC,SAAS,8BAAOW,EAAP,MAA6B,uBAAGI,KAAMH,GAAeA,KAI5EI,EA9EK,SAACjD,GAAW,IAAD,EAEKC,oBAAS,GAFd,mBAEpBC,EAFoB,KAEVC,EAFU,KAI3B,IAAKH,EAAMmB,QACP,OAAO,kBAAC+B,EAAA,EAAD,MAeX,OACI,6BACI,yBAAKnB,UAAWC,IAAEmB,oBACbnD,EAAMmB,QAAQiC,OAAOC,MAAQ,yBAAKtB,UAAWC,IAAEsB,UAAWC,IAAK,GAAIC,IAAKxD,EAAMmB,QAAQiC,OAAOC,QAC1F,yBAAKtB,UAAWC,IAAEsB,UAAWE,IAAKC,IAAQF,IAAI,SACjDvD,EAAMqC,SAAW,2BAAOb,KAAM,OAAQb,SAjBzB,SAACC,GACnBA,EAAE8C,OAAOC,MAAMC,QACf5D,EAAM6D,UAAUjD,EAAE8C,OAAOC,MAAM,OAiB1BzD,EACG,kBAAC,EAAD,CAAiB4D,cAAe9D,EAAMmB,QAASA,QAASnB,EAAMmB,QAASE,SAdtE,SAAC0C,GACd/D,EAAMgE,YAAYD,GAAUE,MAAK,WAC7B9D,GAAY,SAaJ,kBAAC,EAAD,CAAagB,QAASnB,EAAMmB,QAASkB,QAASrC,EAAMqC,QACvCC,aAAc,kBAAMnC,GAAY,MAEjD,kBAAC,EAAD,CAAwBC,OAAQJ,EAAMI,OAAQM,aAAcV,EAAMU,kB,0BCnCnEwD,EAdF,SAAClE,GACZ,OACE,yBAAK+B,UAAWC,IAAEmC,MAChB,yBACEX,IAAI,2DACJD,IAAI,KAELvD,EAAMoE,QACP,6BACE,0BAAMrC,UAAWC,IAAEqC,KAAnB,SAA+BrE,EAAMsE,e,kCCLvCC,EAAcC,YAAiB,IAqB/BC,EAAwBzD,YAAU,CAACC,KAAM,kBAAjBD,EAlBT,SAAChB,GAElB,OACI,0BAAMqB,SAAUrB,EAAMkB,cAClB,6BACI,kBAACwD,EAAA,EAAD,CAAOC,UAAWlD,IACXmD,KAAK,cACLC,SAAU,CAACC,IAAUP,GACrBQ,YAAa,kBAGxB,6BACI,kDA8BDC,EAtBCC,IAAMC,MAAK,SAAAlF,GACvB,IAAImF,EAAenF,EAAMoF,MAAMvD,KAAI,SAACwD,GAAD,OAE/B,kBAAC,EAAD,CAAMvD,IAAKwD,KAAKC,SAAUnB,QAASiB,EAAEjB,QAASE,WAAYe,EAAEf,gBAQhE,OACI,yBAAKvC,UAAWC,IAAEwD,SACd,wCACA,6BACI,kBAACf,EAAD,CAAuBpD,SARlB,SAAC0C,GACd/D,EAAMyF,QAAQ1B,EAAS2B,iBASnB,yBAAK3D,UAAWC,IAAEoD,OAAQD,O,QCzBvBQ,EAFUC,aAfH,SAACC,GACnB,MAAO,CACHT,MAAOS,EAAMC,YAAYV,MACzBM,YAAaG,EAAMC,YAAYJ,gBAId,SAACK,GACtB,MAAO,CACHN,QAAS,SAACO,GACND,EAASE,IAAQC,qBAAqBF,QAKzBJ,CAA6CZ,GCDvDmB,EAdD,SAACnG,GACX,OAAO,yBAAK+B,UAAWC,IAAEb,SACrB,kBAAC,EAAD,CAAakB,QAASrC,EAAMqC,QACflB,QAASnB,EAAMmB,QACff,OAAQJ,EAAMI,OACdM,aAAcV,EAAMU,aACpBmD,UAAW7D,EAAM6D,UACjBG,YAAahE,EAAMgE,cAEhC,kBAAC,EAAD,Q,eCNFoC,E,yLAGE,IAAIC,EAASC,KAAKtG,MAAMuG,MAAMC,OAAOH,OAChCA,IACDA,EAASC,KAAKtG,MAAMyG,mBAEhBH,KAAKtG,MAAM0G,QAAQC,KAAK,UAGhCL,KAAKtG,MAAM4G,mBAAmBP,GAC9BC,KAAKtG,MAAM6G,UAAUR,K,0CAIrBC,KAAKQ,mB,yCAGUC,EAAWC,EAAWC,GACjCX,KAAKtG,MAAMuG,MAAMC,OAAOH,SAAWU,EAAUR,MAAMC,OAAOH,QAC1DC,KAAKQ,mB,+BAMT,OACI,kBAAC,EAAD,iBAAaR,KAAKtG,MAAlB,CACIqC,SAAUiE,KAAKtG,MAAMuG,MAAMC,OAAOH,OAC7BlF,QAASmF,KAAKtG,MAAMmB,QACpBf,OAAQkG,KAAKtG,MAAMI,OACnBM,aAAc4F,KAAKtG,MAAMU,aAClCmD,UAAWyC,KAAKtG,MAAM6D,iB,GAhCHoB,IAAMiC,WA4CtBC,sBACXvB,aARkB,SAACC,GAAD,MAAY,CAC9B1E,QAAS0E,EAAMC,YAAY3E,QAC3Bf,OAAQyF,EAAMC,YAAY1F,OAC1BqG,iBAAkBZ,EAAMuB,KAAKf,OAC7BgB,OAAQxB,EAAMuB,KAAKC,UAIM,CAACT,uBAAoBC,cAAWnG,iBAAcmD,cAAWG,kBAClFsD,IAFWH,CAGbf","file":"static/js/3.ef74379b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"avaPlusDescription\":\"ProfileInfo_avaPlusDescription__3dcfc\",\"userPhoto\":\"ProfileInfo_userPhoto__1CtiL\",\"socialIcons\":\"ProfileInfo_socialIcons__9AfKL\",\"contact\":\"ProfileInfo_contact__1Mq3F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1Yimg\"};","module.exports = __webpack_public_path__ + \"static/media/arni.59ff89f9.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2ZDdM\",\"d18\":\"Post_d18__cXaRW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__25ieO\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div><b>Status: </b><span onDoubleClick={activateMode}>{props.status || \"--------\"}</span></div>}\r\n\r\n            {editMode && <div>\r\n                <input autoFocus={true}\r\n                       onBlur={deactivateEditMode}\r\n                       onChange={onStatusChange}\r\n                       value={status}/>\r\n            </div>}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n\r\n// Колесо, стойки, подтягивания на турнике, выпрыжки колени к плечам, Лотос, закрытый лотос.","import React from \"react\";\r\nimport {createField, Input, TextArea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport style from \"./../../common/FormsControls/FormsControls.module.css\"\r\n\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <b>Full name: </b>{createField(\"Full name\", \"fullName\", [], Input)}\r\n            </div>\r\n\r\n            <div><b>Looking for a job </b>\r\n                {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n            </div>\r\n\r\n            <div><b>My professional skills: </b>\r\n                {createField(\"My professional skills\", \"lookingForAJobDescription\", [], TextArea, {type: \"checkbox\"})}\r\n            </div>\r\n\r\n            <div>\r\n                <b>About me: </b>\r\n                {createField(\"About me\", \"aboutMe\", [], TextArea, {type: \"checkbox\"})}\r\n\r\n            </div>\r\n\r\n\r\n            <div>\r\n                <b>Contacts: </b> {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={s.contact}>\r\n                    <b>{key}: </b>\r\n                    {createField(key, \"contacts.\" + key, [], Input)}\r\n                </div>\r\n            })}\r\n            </div>\r\n\r\n            <div>\r\n                <button>Save</button>\r\n            </div>\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\n// import facebook from \"../../../assets/images/facebook-app-logo.svg\";\r\n// import website from \"../../../assets/images/internet.svg\";\r\n// import vk from \"../../../assets/images/vk.svg\";\r\n// import twitter from \"../../../assets/images/twitter.svg\";\r\n// import instagram from \"../../../assets/images/instagram.svg\";\r\n// import youtube from \"../../../assets/images/youtube.svg\";\r\n// import github from \"../../../assets/images/github.svg\";\r\nimport arnold from \"../../../assets/images/arni.png\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport {ProfileType} from \"../../../types/types\";\r\n\r\n// type PropsType = {\r\n//     profile: ProfileType\r\n//\r\n// }\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const mainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(() => {\r\n            setEditMode(false);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.avaPlusDescription}>\r\n                {props.profile.photos.large ? <img className={s.userPhoto} alt={\"\"} src={props.profile.photos.large}/> :\r\n                    <img className={s.userPhoto} src={arnold} alt=\"Arni\"/>}\r\n                {props.isOwner && <input type={\"file\"} onChange={mainPhotoSelected}/>}\r\n\r\n                {editMode ?\r\n                    <ProfileDataForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit}/> :\r\n                    <ProfileData profile={props.profile} isOwner={props.isOwner}\r\n                                 goToEditMode={() => setEditMode(true)}/>}\r\n\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <b>Full name: </b><span>{profile.fullName}</span>\r\n            </div>\r\n            <div>\r\n\r\n                <div>\r\n                    <b>About me: </b><span>{profile.aboutMe}</span>\r\n                </div>\r\n                {profile.lookingForAJob &&\r\n                <div><b>Ищу работу: </b> <span>Да</span></div>}\r\n                {profile.lookingForAJobDescription && <div><b>Проф скилы: </b> <span>{profile.lookingForAJobDescription}</span></div>}\r\n                <div className={s.socialNetworks}>\r\n                    <b>Contacts: </b> {Object.keys(profile.contacts).map(key => {\r\n                    {\r\n                        if (profile.contacts[key]) {\r\n                            return <Contact contactTitle={key} key={key} contactValue={profile.contacts[key]}/>\r\n                        }\r\n                    }\r\n                })}\r\n                </div>\r\n                {isOwner && <div>\r\n                    <button onClick={goToEditMode}>Edit</button>\r\n                </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><span>{contactTitle}: </span><a href={contactValue}>{contactValue}</a></div>\r\n}\r\n\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img\r\n        src=\"https://demo.phpgang.com/crop-images/demo_files/pool.jpg\"\r\n        alt=\"\"\r\n      />\r\n      {props.message}\r\n      <div>\r\n        <span className={s.d18}>likes {props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Post;\r\n","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {TextArea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\n\r\nlet AddNewPostForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea}\r\n                       name=\"newPostText\"\r\n                       validate={[required, maxLength10]}\r\n                       placeholder={\"Post message\"}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Send post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormWrapper = reduxForm({form: 'AddNewPostForm'})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElement = props.posts.map((p) => (\r\n\r\n        <Post key={Math.random()} message={p.message} likesCount={p.likesCount}/>\r\n\r\n    ));\r\n\r\n    const onSubmit = (formData) => {\r\n        props.addPost(formData.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.myPosts}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <AddNewPostFormWrapper onSubmit={onSubmit}/>\r\n            </div>\r\n            <div className={s.posts}>{postsElement}</div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default MyPosts;\r\n","\r\nimport {actions} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (postText) => {\r\n            dispatch(actions.addPostActionCreator(postText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport s from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nlet Profile = (props) => {\r\n    return <div className={s.profile}>\r\n        <ProfileInfo isOwner={props.isOwner}\r\n                     profile={props.profile}\r\n                     status={props.status}\r\n                     updateStatus={props.updateStatus}\r\n                     savePhoto={props.savePhoto}\r\n                     saveProfile={props.saveProfile}\r\n        />\r\n        <MyPostsContainer/>\r\n    </div>\r\n\r\n\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserInformation, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserInformation(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props}\r\n                isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n            savePhoto={this.props.savePhoto}/>\r\n        );\r\n    }\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserInformation, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}