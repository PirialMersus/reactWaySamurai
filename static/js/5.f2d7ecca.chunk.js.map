{"version":3,"sources":["pages/Chat/ChatPage.tsx","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"names":["Chat","dispatch","useDispatch","useEffect","startMessagesListening","stopMessagesListening","Messages","obj","TypeError","messages","useSelector","state","chat","style","height","overflowY","map","m","index","key","message","Message","src","photo","width","userName","AddMessageForm","useState","setMessage","onChange","e","currentTarget","value","disabled","onClick","sendMessage","ChatPage"],"mappings":"iLAeMA,EAAiB,WAEnB,IAAMC,EAAWC,cAWjB,OATAC,qBAAU,WAEN,OADAF,EAASG,eACF,WACHH,EAASI,kBAEd,IAKC,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,QAKNC,EAAyB,SAAC,ICpCjB,SAAmCC,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAIC,UAAU,gCDmCC,IACpC,IAAMC,EAAYC,aAAY,SAACC,GAAD,OAAyBA,EAAMC,KAAKH,YAElE,OACI,yBAAKI,MAAO,CAACC,OAAQ,QAASC,UAAW,SACpCN,EAASO,KAAI,SAACC,EAAGC,GAAJ,OAAc,kBAAC,EAAD,CAASC,IAAKD,EAAOE,QAASH,SAKhEI,EAAkD,SAAC,GAAe,IAAdD,EAAa,EAAbA,QAEtD,OACI,6BACI,yBAAKE,IAAKF,EAAQG,MAAOV,MAAO,CAACW,MAAO,UAAU,2BAAIJ,EAAQK,UAC9D,6BACCL,EAAQA,QACT,+BAKNM,EAAgC,WAAO,IAAD,EAEVC,mBAAS,IAFC,mBAEjCP,EAFiC,KAExBQ,EAFwB,OAGFD,mBAA8B,WAH5B,mBAIlC1B,GAJkC,UAIvBC,eAUjB,OACI,6BACI,6BACI,8BAAU2B,SAAU,SAACC,GAAD,OAAOF,EAAWE,EAAEC,cAAcC,QAAQA,MAAOZ,KAEzE,6BACI,4BAAQa,UAAU,EAAOC,QAdV,WAClBd,IAGLnB,EAASkC,YAAYf,IACrBQ,EAAW,OASH,WAMDQ,UA3EY,WACvB,OAAO,6BACH,kBAAC,EAAD","file":"static/js/5.f2d7ecca.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\"\r\nimport { ChatMessageType } from \"../../api/chat-api\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {sendMessage, startMessagesListening, stopMessagesListening} from \"../../redux/chat-reducer\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\n\r\n\r\n\r\n\r\nconst ChatPage: React.FC = () => {\r\n    return <div>\r\n        <Chat/>\r\n    </div>\r\n}\r\n\r\nconst Chat: React.FC = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=> {\r\n        dispatch(startMessagesListening())\r\n        return () => {\r\n            dispatch(stopMessagesListening())\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Messages />\r\n            <AddMessageForm />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Messages: React.FC<{}> = ({}) => {\r\n    const messages  = useSelector((state: AppStateType) => state.chat.messages)\r\n\r\n    return (\r\n        <div style={{height: '400px', overflowY: 'auto'}}>\r\n            {messages.map((m, index) => <Message key={index} message={m}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Message: React.FC<{ message: ChatMessageType }> = ({message}) => {\r\n\r\n    return (\r\n        <div>\r\n            <img src={message.photo} style={{width: '30px'}}/><b>{message.userName}</b>\r\n            <br/>\r\n            {message.message}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm: React.FC<{ }> = () => {\r\n\r\n    const [message, setMessage] = useState('')\r\n    const [readyStatus, setReadyStatus] = useState<'pending' | 'ready'>('pending')\r\n    const dispatch = useDispatch();\r\n\r\n    const sendMessageHandler = () => {\r\n        if (!message) {\r\n            return\r\n        }\r\n        dispatch(sendMessage(message))\r\n        setMessage('')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <textarea onChange={(e) => setMessage(e.currentTarget.value)} value={message}></textarea>\r\n            </div>\r\n            <div>\r\n                <button disabled={false} onClick={sendMessageHandler}>Send</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatPage\r\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}"],"sourceRoot":""}