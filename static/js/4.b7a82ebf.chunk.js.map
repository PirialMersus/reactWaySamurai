{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","s","dialog","message","DialogItem","path","id","to","activeClassName","activeLink","name","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","validate","required","placeholder","Dialogs","dialogElements","dialogsPage","dialogsData","map","d","key","Math","random","messageElements","messages","m","push","isAuth","dialogs","dialogsItems","updateNewMessageText","addMessage","values","newMessageBody","compose","connect","state","dispatch","addMessageActionCreator","withAuthRedirect"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,WAAa,8B,uFCQ1OC,EANC,SAACC,GACb,OACI,yBAAKC,UAAWC,IAAEC,QAASH,EAAMI,U,QCW1BC,EAPyB,SAACL,GACrC,IAAIM,EAAO,YAAcN,EAAMO,GAC/B,OACI,yBAAKN,UAAWC,IAAEC,QAAQ,kBAAC,IAAD,CAASK,GAAIF,EAAMG,gBAAiBP,IAAEQ,YAAaV,EAAMW,Q,yCCHrFC,EAAcC,YAAiB,IAmB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAjBL,SAACf,GAEpB,OACI,0BAAMiB,SAAUjB,EAAMkB,cAClB,6BAAK,kBAACC,EAAA,EAAD,CACDC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBD,KAAK,iBACLa,YAAY,wBAEhB,6BACI,6CA0CDC,EAlCC,SAACzB,GACb,IAAI0B,EAAiB1B,EAAM2B,YAAYC,YAAYC,KAAI,SAACC,GAAD,OACnD,kBAAC,EAAD,CAAYC,IAAKC,KAAKC,SAAUtB,KAAMmB,EAAEnB,KAAMJ,GAAIuB,EAAEvB,QAGlD2B,EAAkB,GAWxB,OALAlC,EAAM2B,YAAYQ,SAASN,KAAI,SAACO,GAAD,OAC3BF,EAAgBG,KAAK,kBAAC,EAAD,CAASN,IAAKC,KAAKC,SAAU7B,QAASgC,EAAEhC,cAI5DJ,EAAMsC,OAMP,yBAAKrC,UAAWC,IAAEqC,SACd,yBAAKtC,UAAWC,IAAEsC,cACbd,GAEL,yBAAKzB,UAAWC,IAAEiC,UACd,6BAAMD,GACN,kBAACpB,EAAD,CAAqB2B,qBAAsBzC,EAAMyC,qBAAsBC,WAAY1C,EAAM0C,WACvEzB,SAtBV,SAAC0B,GACjB3C,EAAM0C,WAAWC,EAAOC,iBAqB2BjB,YAAa3B,EAAM2B,gBAZ/D,kBAAC,IAAD,CAAUnB,GAAI,Y,wBC3BdqC,sBACXC,aAfkB,SAACC,GACnB,MAAO,CACHpB,YAAaoB,EAAMpB,gBAIF,SAACqB,GACtB,MAAO,CACHN,WAAY,SAACE,GACTI,EAASC,YAAwBL,SAOzCM,IAFWL,CAGbpB","file":"static/js/4.b7a82ebf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3ktPR\",\"dialogsItems\":\"Dialogs_dialogsItems__3XX3O\",\"dialog\":\"Dialogs_dialog__s-iyi\",\"active\":\"Dialogs_active__17E9q\",\"messages\":\"Dialogs_messages___wEOG\",\"message\":\"Dialogs_message__28lK7\",\"activeLink\":\"Dialogs_activeLink__2dh-9\"};","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.dialog}>{props.message}</div>\r\n    );\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nconst DialogItem: React.FC<PropsType> = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialog}><NavLink to={path} activeClassName={s.activeLink}>{props.name}</NavLink></div>\r\n    );\r\n};\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {reduxForm, Field} from \"redux-form\";\r\nimport {TextArea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div><Field\r\n                component={TextArea}\r\n                validate={[required, maxLength50]}\r\n                name=\"newMessageBody\"\r\n                placeholder=\"Enter your message\"\r\n            /></div>\r\n            <div>\r\n                <button>Sent</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogElements = props.dialogsPage.dialogsData.map((d) => (\r\n        <DialogItem key={Math.random()} name={d.name} id={d.id}/>\r\n    ));\r\n\r\n    const messageElements = [];\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageBody);\r\n    };\r\n\r\n    props.dialogsPage.messages.map((m) =>\r\n        messageElements.push(<Message key={Math.random()} message={m.message}/>)\r\n    );\r\n\r\n\r\n    if (!props.isAuth) {\r\n        return <Redirect to={\"/login\"}/>\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messageElements}</div>\r\n                <AddMessageFormRedux updateNewMessageText={props.updateNewMessageText} addMessage={props.addMessage}\r\n                                  onSubmit={addNewMessage} dialogsPage={props.dialogsPage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Dialogs;","import {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageBody) => {\r\n            dispatch(addMessageActionCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}