{"version":3,"sources":["utils/validators/validators.ts","components/common/Paginator/Paginator.module.css","api/profile-api.ts","redux/profile-reducer.ts","redux/dialogs-reducer.ts","api/api.ts","api/chat-api.ts","redux/chat-reducer.ts","assets/images/loading.svg","assets/images/user.png","components/Header/Header.module.css","components/common/FormsControls/FormsControls.tsx","serviceWorker.js","api/auth-api.ts","api/security-api.ts","redux/auth-reducer.ts","redux/app-reducer.ts","redux/sidebar-reducer.ts","utils/object-helpers.ts","api/users-api.ts","redux/users-reducer.ts","redux/redux-store.ts","components/hoc/withSuspense.tsx","redux/users-selectors.ts","components/common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/UsersSearchForm.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx","components/Login/Login.tsx","components/Settings/Settings.tsx","components/News/News.tsx","redux/auth-selectors.ts","components/Header/Header.tsx","App.tsx","index.tsx","components/common/Preloader/Preloader.tsx","components/common/FormsControls/FormsControls.module.css","components/Users/Users.module.css","components/Navbar/Navbar.module.css"],"names":["required","value","maxLengthCreator","maxLength","length","module","exports","profileAPI","userId","instance","get","then","res","data","status","put","photoFile","formData","FormData","append","headers","profile","initialState","posts","id","message","likesCount","actions","addPostActionCreator","postText","type","setUserProfile","setStatus","deletePost","postId","savePhotoSuccess","photos","getUserInformation","dispatch","a","getStatus","updateStatus","resultCode","savePhoto","file","saveProfile","getState","auth","Error","stopSubmit","_error","messages","Promise","reject","profileReducer","state","action","newPost","filter","p","dialogsData","name","sendMessage","newMessageBody","dialogsReducer","newMessage","ResultCodesEnum","ResultCodeForCaptchaEnum","axios","create","withCredentials","baseURL","subscribers","ws","closeHandler","setTimeout","createChannel","messageHandler","e","newMessages","JSON","parse","forEach","s","removeEventListener","close","WebSocket","addEventListener","chatAPI","callback","push","send","payload","_newMessageHandler","newMessageHandlerCreator","startMessagesListening","stopMessagesListening","chatReducer","FormControl","meta","touched","error","children","hasError","className","styles","formControl","TextArea","props","input","restProps","Input","createField","placeholder","validators","component","text","validate","Boolean","window","location","hostname","match","authAPI","email","password","rememberMe","captcha","post","delete","securityAPI","login","isAuth","captchaUrl","setMyProfileData","meData","Success","getCaptchaUrl","url","authReducer","initialized","appReducer","friends","iconAddress","isFriend","sidebarReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","usersAPI","getUsers","currentPage","pageSize","term","friend","unfollow","follow","users","totalUsersCount","isFetching","followingInProgress","count","requestUsers","page","totalCount","_followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","profilePage","dialogsPage","sidebar","usersPage","form","formReducer","app","chat","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","WrappedComponent","Suspense","fallback","Preloader","getUsersSuperSelector","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","getUsersFilter","Paginator","totalItemsCount","onPageChanged","x","portionSize","pagesCount","Math","ceil","pages","i","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginatorsRow","onClick","key","cn","selectedPage","pageNumber","User","user","to","photoUser","src","small","userPhoto","alt","disabled","some","usersSearchFormValidate","values","UsersSearchForm","React","memo","useSelector","enableReinitialize","initialValues","String","onSubmit","setSubmitting","onFilterChanged","isSubmitting","as","Users","useDispatch","history","useHistory","useEffect","parsed","queryString","search","substr","actualPage","actualFilter","Number","query","pathname","followUser","bind","unfollowUser","paginatorUsers","UsersPage","pageTitle","LoginReduxForm","reduxForm","handleSubmit","undefined","formSummaryError","LoginPage","CaptchaIsRequired","Settings","News","selectIsAuth","selectCurrentUserLogin","Header","Layout","span","theme","mode","defaultSelectedKeys","style","lineHeight","Item","backgroundColor","icon","SubMenu","Menu","Content","Footer","Sider","DialogsContainer","lazy","ProfileContainer","ChatPage","SuspendedDialogs","SuspendedProfile","SuspendedChatPage","App","catchAllUnhandledErrors","alert","reason","this","initializeApp","padding","margin","background","width","height","title","activeClassName","activeLink","minHeight","exact","path","render","textAlign","Component","AppContainer","connect","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","preloader"],"mappings":"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","file":"static/js/main.12a05d86.chunk.js","sourcesContent":["export type FieldValidatorType = (value: string) => string | undefined\r\n\r\nexport const required: FieldValidatorType = (value: string): string | undefined => {\r\n    if (value) {\r\n        return undefined;\r\n    }\r\n    return 'Field is required';\r\n\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number): FieldValidatorType => (value) => {\r\n    if (value && value.length > maxLength) {\r\n        return `Max length is ${maxLength} symbols`;\r\n    }\r\n    return undefined;\r\n}\r\nexport const maxLength10 = (value: string) => {\r\n    if (value.length > 10) {\r\n        return `Max length is 10 symbols`;\r\n    }\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__2wqhL\",\"paginatorsRow\":\"Paginator_paginatorsRow__eZ5tb\"};","import {PhotosType, ProfileType} from \"../types/types\";\r\nimport {instance, APIResponseType} from \"./api\";\r\n\r\ntype SavePhotoResponseDataType = {\r\n    photos: PhotosType\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId: number) {\r\n        return instance\r\n            .get<ProfileType>(`profile/` + userId)\r\n            .then(res => res.data);\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance\r\n            .get<string>('profile/status/' + userId)\r\n            .then(res => res.data)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance\r\n            .put<APIResponseType>('profile/status', {status: status})\r\n            .then(res => res.data)\r\n    },\r\n    savePhoto(photoFile: File) {\r\n        const formData = new FormData;\r\n        formData.append(\"image\", photoFile);\r\n        return instance\r\n            .put<APIResponseType<SavePhotoResponseDataType>>('profile/photo', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            })\r\n            .then(res => res.data)\r\n    },\r\n    saveProfile(profile: ProfileType) {\r\n        return instance\r\n            .put<APIResponseType>('profile', profile)\r\n            .then(res => res.data)\r\n    }\r\n}","import {FormAction, stopSubmit} from \"redux-form\";\r\nimport {PhotosType, PostType, ProfileType} from \"../types/types\";\r\nimport {Dispatch} from \"redux\";\r\nimport {AppStateType, BaseThunkType, InferActionsTypes} from \"./redux-store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {usersAPI} from \"../api/users-api\";\r\nimport {profileAPI} from \"../api/profile-api\";\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {id: 1, message: \"It's my first post\", likesCount: 15},\r\n        {id: 2, message: \"Hello, how are you?\", likesCount: 45},\r\n        {id: 3, message: \"Hello, mersus?\", likesCount: 48},\r\n        {id: 4, message: \"Hello, pirial?\", likesCount: 40},\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: \"\",\r\n\r\n}\r\n\r\n\r\nconst profileReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"SN/PROFILE/ADD-POST\": {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.postText,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            };\r\n        }\r\n        case \"SN/PROFILE/SET_USER_PROFILE\": {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n        case \"SN/PROFILE/SET_STATUS\": {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        case \"SN/PROFILE/DELETE_POST\": {\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n        }\r\n        case \"SN/PROFILE/SAVE_PHOTO_SUCCESS\": {\r\n            return {...state, profile: {...state.profile, photos: action.photos}as ProfileType}\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    addPostActionCreator: (postText: string) => ({type: \"SN/PROFILE/ADD-POST\", postText} as const),\r\n    setUserProfile: (profile: ProfileType) => ({type: \"SN/PROFILE/SET_USER_PROFILE\", profile} as const),\r\n    setStatus: (status: string) => ({type: \"SN/PROFILE/SET_STATUS\", status} as const),\r\n    deletePost: (postId: number) => ({type: \"SN/PROFILE/DELETE_POST\", postId} as const),\r\n    savePhotoSuccess: (photos: PhotosType) => ({type: \"SN/PROFILE/SAVE_PHOTO_SUCCESS\", photos} as const)\r\n}\r\n\r\n\r\ntype GetStateType = () => AppStateType\r\ntype DispatchType = Dispatch<ActionsType>\r\n// type ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsTypes>\r\n\r\nexport const getUserInformation = (userId: number): ThunkType => async (dispatch) => {\r\n    const data = await profileAPI.getUserProfile(userId);\r\n    dispatch(actions.setUserProfile(data));\r\n}\r\n\r\nexport const getStatus = (userId: number): ThunkType => async (dispatch) => {\r\n    const data = await profileAPI.getStatus(userId)\r\n    dispatch(actions.setStatus(data));\r\n}\r\n\r\nexport const updateStatus = (status: string): ThunkType => async (dispatch) => {\r\n    const data = await profileAPI.updateStatus(status)\r\n    if (data.resultCode === 0) {\r\n        dispatch(actions.setStatus(status));\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file: File): ThunkType => async (dispatch) => {\r\n    const data = await profileAPI.savePhoto(file)\r\n    if (data.resultCode === 0) {\r\n        dispatch(actions.savePhotoSuccess(data.data.photos));\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile: ProfileType): ThunkType => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const data = await profileAPI.saveProfile(profile);\r\n\r\n    if (data.resultCode === 0) {\r\n        if (userId !== null){\r\n            dispatch(getUserInformation(userId))\r\n        } else {\r\n            throw new Error(\"userId can't be null\")\r\n        }\r\n\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: data.messages[0]}));\r\n        return Promise.reject(data.messages[0]);\r\n    }\r\n}\r\n\r\nexport default profileReducer\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType | FormAction>","import {strict} from \"assert\";\r\nimport {InferActionsTypes} from \"./redux-store\";\r\n\r\ntype DialogType = {\r\n    id: number;\r\n    name: string;\r\n};\r\ntype MessageType = {\r\n    id: number;\r\n    message: string;\r\n};\r\n\r\nconst initialState = {\r\n    messages: [\r\n        {id: 1, message: \"Hello\"},\r\n        {id: 2, message: \"It-Kamasutra\"},\r\n        {id: 3, message: \"Yo\"},\r\n        {id: 4, message: \"sfsdfsdf\"},\r\n        {id: 5, message: \"dddfffffddddd\"},\r\n    ] as Array<MessageType>,\r\n    dialogsData: [\r\n        {id: 1, name: \"Artem\"},\r\n        {id: 2, name: \"Victor\"},\r\n        {id: 3, name: \"Sveta\"},\r\n        {id: 4, name: \"Nikolay\"},\r\n        {id: 5, name: \"Dimich\"},\r\n        {id: 6, name: \"Gregorii\"},\r\n        {id: 7, name: \"Gena\"},\r\n    ] as Array<DialogType>,\r\n};\r\n\r\n\r\nconst dialogsReducer = (\r\n    state = initialState,\r\n    action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"SN/DIALOGS/ADD-MESSAGE\": {\r\n            let newMessage = {\r\n                id: 5,\r\n                message: action.newMessageBody,\r\n            };\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage],\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    sendMessage: (newMessageBody: string) => ({type: \"SN/DIALOGS/ADD-MESSAGE\", newMessageBody} as const)\r\n}\r\n\r\nexport default dialogsReducer\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n","import axios from \"axios\";\r\nimport {UserType} from \"../types/types\";\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"7f79b91b-2e45-4e21-b6d5-aacbccd686ed\"\r\n    }\r\n})\r\n\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1\r\n}\r\nexport enum ResultCodeForCaptchaEnum {\r\n    CaptchaIsRequired = 10\r\n}\r\n\r\nexport type GetItemsType = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: string | null\r\n}\r\n\r\n\r\nexport type APIResponseType<D = {}, RC = ResultCodesEnum> = {\r\n    data: D\r\n    messages: Array<string>\r\n    resultCode: RC\r\n}","\r\nlet subscribers = [] as SubscriberType[]\r\n\r\nlet ws: WebSocket | null = null;\r\n\r\nconst closeHandler = () => {\r\n    setTimeout(createChannel, 3000)\r\n}\r\n\r\nconst messageHandler = (e: MessageEvent) => {\r\n    const newMessages = JSON.parse(e.data);\r\n    subscribers.forEach(s => s(newMessages))\r\n};\r\n\r\nfunction createChannel() {\r\n\r\n    ws?.removeEventListener('close', closeHandler)\r\n    ws?.close()\r\n\r\n    ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx');\r\n    ws.addEventListener('close', closeHandler)\r\n    ws.addEventListener('message', messageHandler)\r\n\r\n}\r\n\r\nexport const chatAPI = {\r\n    start() {\r\n        createChannel()\r\n    },\r\n    stop() {\r\n        subscribers = []\r\n        ws?.removeEventListener('close', closeHandler)\r\n        ws?.removeEventListener('message', messageHandler)\r\n        ws?.close()\r\n\r\n    },\r\n    subscribe(callback: SubscriberType){\r\n        subscribers.push(callback)\r\n        return () => {\r\n            subscribers.filter(s => s !== callback)\r\n        }\r\n    },\r\n    unsubscribe(callback: SubscriberType) {\r\n        subscribers.filter(s => s !== callback)\r\n    },\r\n    sendMessage(message: string) {\r\n        ws?.send(message)\r\n    }\r\n}\r\n\r\n\r\ntype SubscriberType = (messages: ChatMessageType[])=> void\r\n\r\nexport type ChatMessageType = {\r\n    message: string\r\n    photo: string\r\n    userId: number\r\n    userName: string\r\n}","import {ResultCodeForCaptchaEnum, ResultCodesEnum} from \"../api/api\"\r\nimport {FormAction, stopSubmit} from \"redux-form\"\r\nimport {Action, Dispatch} from \"redux\"\r\nimport {ThunkAction} from \"redux-thunk\"\r\nimport {AppStateType, BaseThunkType, InferActionsTypes} from \"./redux-store\"\r\nimport {authAPI} from \"../api/auth-api\"\r\nimport {securityAPI} from \"../api/security-api\"\r\nimport {chatAPI, ChatMessageType} from \"../api/chat-api\"\r\n\r\nconst initialState = {\r\n    messages: [] as ChatMessageType[]\r\n}\r\n\r\n\r\nconst chatReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"SN/chat/MESSAGES_RECEIVED\":\r\n\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, ...action.payload.messages]\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    messagesReceived: (messages: ChatMessageType[]) => ({\r\n        type: \"SN/chat/MESSAGES_RECEIVED\", payload: {messages}\r\n    } as const)\r\n}\r\nlet _newMessageHandler: ((messages: ChatMessageType[]) => void) | null = null\r\n\r\n\r\nconst newMessageHandlerCreator = (dispatch: Dispatch) => {\r\n    if (_newMessageHandler === null) {\r\n        _newMessageHandler = (messages) =>\r\n        {\r\n            dispatch(actions.messagesReceived(messages))\r\n        }\r\n    }\r\n\r\n    return _newMessageHandler\r\n};\r\n\r\nexport const startMessagesListening = (): ThunkType => async (dispatch) => {\r\n    chatAPI.start()\r\n    chatAPI.subscribe(newMessageHandlerCreator(dispatch))\r\n}\r\nexport const stopMessagesListening = (): ThunkType => async (dispatch) => {\r\n    chatAPI.unsubscribe(newMessageHandlerCreator(dispatch))\r\n    chatAPI.stop()\r\n}\r\n\r\nexport const sendMessage = (message: string): ThunkType => async (dispatch) => {\r\n    chatAPI.sendMessage(message)\r\n}\r\n\r\n\r\nexport default chatReducer\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType | FormAction>\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/loading.27fc27b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.93a57c9f.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Header_login__3ePrb\"};","import React from \"react\"\r\nimport styles from \"./FormsControls.module.css\"\r\nimport {Field, WrappedFieldMetaProps, WrappedFieldProps} from \"redux-form\"\r\nimport {FieldValidatorType} from \"../../../utils/validators/validators\"\r\nimport {LoginFormValuesType} from \"../../Login/Login\";\r\n\r\ntype FormControlPropsType = {\r\n    meta: WrappedFieldMetaProps\r\n}\r\n\r\nconst FormControl: React.FC<FormControlPropsType> = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TextArea: React.FC<WrappedFieldProps> = (props) => {\r\n    //const {input, meta, child, ...restProps} = props;\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props} > <textarea {...input}{...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n    //const {input, meta, child, ...restProps} = props;\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props} > <input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\n\r\n\r\nexport function createField<FormKeysType extends string>(placeholder: string | undefined,\r\n                            name: FormKeysType,\r\n                            validators: Array<FieldValidatorType>,\r\n                            component: React.FC<WrappedFieldProps>,\r\n                            props = {},\r\n                            text = \"\") {\r\n    return <div>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n}\r\n\r\nexport type GetStringKeyS<T> = Extract<keyof T, string>","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {instance, APIResponseType, ResultCodeForCaptchaEnum, ResultCodesEnum} from \"./api\";\r\n\r\ntype MeResponseDataType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\n\r\ntype LoginResponseDataType = {\r\n    userId: number\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance\r\n            .get<APIResponseType<MeResponseDataType>>(`auth/me`).then(res => res.data)\r\n    },\r\n    login(email: string, password: string, rememberMe = false, captcha: null | string = null) {\r\n        return instance\r\n            .post<APIResponseType<LoginResponseDataType, ResultCodesEnum | ResultCodeForCaptchaEnum>>('auth/login', {email, password, rememberMe, captcha})\r\n            .then(res => res.data)\r\n    },\r\n    logout() {\r\n        return instance\r\n            .delete('auth/login');\r\n    }\r\n\r\n}","import {instance} from \"./api\";\r\n\r\ntype GetCaptchaUrlResonceType = {\r\n    url: string\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance\r\n            .get<GetCaptchaUrlResonceType>('security/get-captcha-url')\r\n            .then(res => res.data)\r\n    }\r\n}","import {ResultCodeForCaptchaEnum, ResultCodesEnum} from \"../api/api\"\r\nimport {FormAction, stopSubmit} from \"redux-form\"\r\nimport {Action, Dispatch} from \"redux\"\r\nimport {ThunkAction} from \"redux-thunk\"\r\nimport {AppStateType, BaseThunkType, InferActionsTypes} from \"./redux-store\"\r\nimport {authAPI} from \"../api/auth-api\"\r\nimport {securityAPI} from \"../api/security-api\"\r\n\r\nconst initialState = {\r\n    userId: null as null | number,\r\n    email: null as null | string,\r\n    login: null as null | string,\r\n    isAuth: false,\r\n    captchaUrl: null as null | string\r\n}\r\n\r\n\r\nconst authReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"SN/auth/SET_USER_DATA\":\r\n        case \"SN/auth/GET_CAPTCHA_URL_SUCCESS\":\r\n\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    setAuthUserData: (userId: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\r\n        type: \"SN/auth/SET_USER_DATA\", payload: {userId, email, login, isAuth}\r\n    } as const),\r\n    getCaptchaUrlSuccess: (captchaUrl: string) => ({\r\n        type: \"SN/auth/GET_CAPTCHA_URL_SUCCESS\",\r\n        payload: {captchaUrl}\r\n    }as const),\r\n}\r\n\r\n\r\nexport const setMyProfileData = (): ThunkType => async (dispatch) => {\r\n    let meData = await authAPI.me();\r\n\r\n    if (meData.resultCode === ResultCodesEnum.Success) {\r\n        let {id, login, email} = meData.data;\r\n        dispatch(actions.setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string): ThunkType => async (dispatch) => {\r\n\r\n    let data = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (data.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(setMyProfileData());\r\n    } else {\r\n        if (data.resultCode === ResultCodeForCaptchaEnum.CaptchaIsRequired) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        const message = data.messages.length > 0 ? data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = (): ThunkType => async (dispatch: any) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actions.setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = (): ThunkType => async (dispatch: any) => {\r\n    const data = await securityAPI.getCaptchaUrl()\r\n    const captchaUrl = data.url\r\n    dispatch(actions.getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\nexport default authReducer\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType= BaseThunkType<ActionsType | FormAction>\r\n\r\n","import { Dispatch } from \"redux\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport {setMyProfileData} from \"./auth-reducer\";\r\nimport {AppStateType, InferActionsTypes} from \"./redux-store\";\r\n\r\nconst INITIALIZED_SUCCESS = \"SN/APP/INITIALIZED_SUCCESS\";\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\nconst appReducer = (state = initialState, action: ActionsType): InitialStateType  => {\r\n    switch (action.type) {\r\n        case \"SN/APP/INITIALIZED_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    initializedSuccess: () => ({type: \"SN/APP/INITIALIZED_SUCCESS\",} as const),\r\n}\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(setMyProfileData());\r\n    promise\r\n        .then(() => {\r\n            dispatch(actions.initializedSuccess());\r\n        })\r\n}\r\n\r\nexport default appReducer;","type FriendType = {\r\n    id: number\r\n    name: string\r\n    iconAddress:string\r\n    isFriend: boolean\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nlet initialState = {\r\n    friends: [\r\n        {\r\n            id: 1,\r\n            name: \"Andrey\",\r\n            iconAddress:\r\n                \"https://vashsport.com/wp-content/uploads/motivaciya-v-sporte-640x440.jpg\",\r\n            isFriend: true,\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Gena\",\r\n            iconAddress:\r\n                \"https://static10.tgstat.ru/channels/_0/b5/b5bcf9a66a2fd7998922d87c55acf2f3.jpg\",\r\n            isFriend: true,\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Anatolii\",\r\n            iconAddress:\r\n                \"https://miro.medium.com/max/2560/0*-JLWzLp-DtyCfIo_.jpg\",\r\n            isFriend: true,\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Kirill\",\r\n            iconAddress:\r\n                \"https://i.pinimg.com/originals/73/cb/81/73cb8185bbc42d96b2799eb30389f176.jpg\",\r\n            isFriend: true,\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"Alexandr emelianenko\",\r\n            iconAddress:\r\n                \"https://m.allboxing.ru/sites/default/files/styles/large/public/052_fedor_emelianenko_x_rampage_jackson.0_0.jpg?itok=lkCYQxio\",\r\n            isFriend: true,\r\n        },\r\n        {\r\n            id: 6,\r\n            name: \"Andrey\",\r\n            iconAddress:\r\n                \"https://vashsport.com/wp-content/uploads/motivaciya-v-sporte-640x440.jpg\",\r\n            isFriend: true,\r\n        },\r\n        {\r\n            id: 7,\r\n            name: \"Gena\",\r\n            iconAddress:\r\n                \"https://static10.tgstat.ru/channels/_0/b5/b5bcf9a66a2fd7998922d87c55acf2f3.jpg\",\r\n            isFriend: true,\r\n        },\r\n        {\r\n            id: 8,\r\n            name: \"Anatolii\",\r\n            iconAddress:\r\n                \"https://miro.medium.com/max/2560/0*-JLWzLp-DtyCfIo_.jpg\",\r\n            isFriend: true,\r\n        },\r\n        {\r\n            id: 9,\r\n            name: \"Kirill\",\r\n            iconAddress:\r\n                \"https://i.pinimg.com/originals/73/cb/81/73cb8185bbc42d96b2799eb30389f176.jpg\",\r\n            isFriend: true,\r\n        },\r\n    ]  as Array<FriendType>,\r\n}\r\n\r\n\r\nconst sidebarReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","export const updateObjectInArray = (items: any, itemId: any, objPropName: any, newObjProps: any) => {\r\n    return items.map((u: any) => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u\r\n    })\r\n}\r\n","import {GetItemsType, instance, APIResponseType} from \"./api\"\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10, term: string = \"\", friend: null | boolean = null ) {\r\n        return instance\r\n            .get<GetItemsType>(`users?page=${currentPage}&count=${pageSize}&term=${term}`+\r\n                (friend === null ? \"\" : `&friend=${friend}`))\r\n            .then(res => res.data);\r\n    },\r\n    unfollow(userId: number) {\r\n        return instance\r\n            .delete(`follow/` + userId).then(res => res.data) as Promise<APIResponseType>\r\n    },\r\n    follow(userId: number) {\r\n        return instance\r\n            .post<APIResponseType>(`follow/` + userId)\r\n            .then(res => res.data)\r\n    },\r\n\r\n}","import {updateObjectInArray} from \"../utils/object-helpers\";\r\nimport {PhotosType, UserType} from \"../types/types\";\r\nimport {AppStateType, BaseThunkType, InferActionsTypes} from \"./redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {usersAPI} from \"../api/users-api\";\r\nimport {APIResponseType} from \"../api/api\";\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 20,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>, //array of users ids\r\n    filter: {\r\n        term: \"\",\r\n        friend: null as null | boolean\r\n    }\r\n};\r\n\r\n\r\nconst usersReducer = (state = initialState, action: ActionsTypes): InitialState => {\r\n    switch (action.type) {\r\n        case 'SN/USERS/FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case 'SN/USERS/UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case 'SN/USERS/SET_USERS':\r\n            return {...state, users: action.users}\r\n\r\n        case 'SN/USERS/SET_CURRENT_PAGE':\r\n            return {...state, currentPage: action.currentPage}\r\n\r\n        case 'SN/USERS/SET_FILTER':\r\n            return {...state, filter: action.payload}\r\n\r\n        case 'SN/USERS/SET_TOTAL_USERS_COUNT':\r\n            return {...state, totalUsersCount: action.count}\r\n\r\n        case 'SN/USERS/TOGGLE_IS_FETCHING':\r\n            return {...state, isFetching: action.isFetching}\r\n\r\n        case 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS':\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    followSuccess: (userId: number) => ({type: 'SN/USERS/FOLLOW', userId} as const),\r\n    unfollowSuccess: (userId: number) => ({type: 'SN/USERS/UNFOLLOW', userId} as const),\r\n    setUsers: (users: Array<UserType>) => ({type: 'SN/USERS/SET_USERS', users} as const),\r\n    setCurrentPage: (currentPage: number) => ({\r\n        type: 'SN/USERS/SET_CURRENT_PAGE',\r\n        currentPage\r\n    } as const),\r\n    setFilter: (filter: FilterType) => ({\r\n        type: 'SN/USERS/SET_FILTER',\r\n        payload: filter\r\n    } as const),\r\n    setUsersTotalCount: (totalUsersCount: number) => ({\r\n        type: 'SN/USERS/SET_TOTAL_USERS_COUNT',\r\n        count: totalUsersCount\r\n    } as const),\r\n    toggleIsFetching: (isFetching: boolean) => ({\r\n        type: 'SN/USERS/TOGGLE_IS_FETCHING',\r\n        isFetching\r\n    } as const),\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => ({\r\n        type: 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS',\r\n        isFetching,\r\n        userId\r\n    } as const)\r\n}\r\n\r\n\r\nexport const requestUsers = (page: number, pageSize: number, filter: FilterType):\r\n    ThunkType => {\r\n    return async (dispatch, getState) => {\r\n        dispatch(actions.setCurrentPage(page))\r\n        dispatch(actions.setFilter(filter))\r\n        dispatch(actions.toggleIsFetching(true))\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize, filter.term, filter.friend)\r\n        dispatch(actions.setUsers(data.items))\r\n        dispatch(actions.setUsersTotalCount(data.totalCount))\r\n        dispatch(actions.toggleIsFetching(false))\r\n    }\r\n}\r\n\r\nconst _followUnfollowFlow = async (dispatch: Dispatch<ActionsTypes>,\r\n                                   userId: number,\r\n                                   apiMethod: (userId: number) => Promise<APIResponseType>,\r\n                                   actionCreator: (userId: number)\r\n                                       => ActionsTypes) => {\r\n    dispatch(actions.toggleFollowingProgress(true, userId))\r\n    let response = await apiMethod(userId)\r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(actions.toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        await _followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), actions.followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        await _followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), actions.unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\nexport type InitialState = typeof initialState\r\nexport type FilterType = typeof initialState.filter\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\n","import {applyMiddleware, combineReducers, createStore, compose, Action} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\"\r\nimport appReducer from \"./app-reducer\";\r\nimport chatReducer from \"./chat-reducer\";\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n    chat: chatReducer\r\n })\r\n\r\ntype RootReducerType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\nexport type InferActionsTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\r\n\r\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n\r\nexport default store\r\n\r\n","import React from \"react\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\n\r\nexport function withSuspense<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n\r\n    return (props: WCP) => {\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <WrappedComponent {...props} />\r\n        </React.Suspense>\r\n    }\r\n}\r\n","import {createSelector} from \"reselect\";\r\nimport {AppStateType} from \"./redux-store\";\r\n\r\nexport const getUsers = (state: AppStateType) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsersSelector = (state: AppStateType) => {\r\n    return getUsers(state).filter(u => true);\r\n}\r\n\r\nexport const getUsersSuperSelector = createSelector(getUsers, (users) => {\r\n    return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\nexport const getUsersFilter = (state: AppStateType) => {\r\n    return state.usersPage.filter;\r\n}","import React, {useState} from 'react'\r\nimport s from './Paginator.module.css'\r\nimport cn from 'classnames'\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage?: number\r\n    onPageChanged?: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nconst Paginator: React.FC<PropsType> = ({\r\n                                        totalItemsCount,\r\n                                        pageSize,\r\n                                        currentPage = 1,\r\n                                        onPageChanged = x => x,\r\n                                        portionSize = 10\r\n                                    }) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={s.paginatorsRow}>\r\n        {portionNumber > 1 &&\r\n        <button onClick={() => {\r\n            setPortionNumber(portionNumber - 1)\r\n        }}>Prev</button>}\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span key={p} className={cn({\r\n                    [s.selectedPage]: currentPage === p\r\n                }, s.pageNumber)}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p)\r\n                             }}>{p}</span>\r\n\r\n            })}\r\n        {portionCount > portionNumber &&\r\n        <button onClick={() => {\r\n            setPortionNumber(portionNumber + 1)\r\n        }}>Next</button>}\r\n    </div>\r\n\r\n}\r\nexport default Paginator;","import React from \"react\";\r\nimport s from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {UserType} from \"../../types/types\";\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    followingInProgress: Array<number>\r\n    unfollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n}\r\n\r\nconst User: React.FC<PropsType> = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                            <img className={s.photoUser} src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                                 alt=\"\"/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                                unfollow(user.id);\r\n                            }}>\r\n                                Unfollow\r\n                            </button>\r\n\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                                follow(user.id);\r\n                            }}>\r\n                                Follow\r\n                            </button>}\r\n                    </div>\r\n            </span>\r\n            <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\nexport default User","import {Field, Form, Formik} from \"formik\";\r\nimport React from \"react\";\r\nimport {FilterType} from \"../../redux/users-reducer\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getUsersFilter} from \"../../redux/users-selectors\";\r\n\r\nconst usersSearchFormValidate = (values: any) => {\r\n    const errors = {};\r\n    return errors;\r\n}\r\ntype UsersSearchFormObjectType = {\r\n    term: string\r\n}\r\n\r\ntype FriendFormType = \"true\" | \"false\" | \"null\";\r\ntype FormType = {\r\n    term: string\r\n    friend: FriendFormType\r\n}\r\n\r\ntype PropsType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\n\r\nexport const UsersSearchForm: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const filter = useSelector(getUsersFilter)\r\n\r\n    const submit = (values: FormType, {setSubmitting}: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n        const filter: FilterType = {\r\n            term: values.term,\r\n            friend: values.friend === \"null\" ? null : values.friend === \"true\" ? true : false\r\n        }\r\n\r\n        props.onFilterChanged(filter)\r\n        setSubmitting(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                enableReinitialize\r\n                initialValues={{term: filter.term, friend: String(filter.friend) as FriendFormType}}\r\n                validate={usersSearchFormValidate}\r\n                onSubmit={submit}\r\n            >\r\n                {({isSubmitting}) => (\r\n                    <Form>\r\n                        <Field type=\"text\" name=\"term\"/>\r\n                        <Field name=\"friend\" as=\"select\">\r\n                            <option value=\"null\">All</option>\r\n                            <option value=\"true\">Only followed</option>\r\n                            <option value=\"false\">Only not followed</option>\r\n                        </Field>\r\n                        <button type=\"submit\" disabled={isSubmitting}>\r\n                            Find\r\n                        </button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>)\r\n})","import React, {useEffect} from \"react\";\r\nimport s from \"./Users.module.css\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport {UsersSearchForm} from \"./UsersSearchForm\";\r\nimport {FilterType, follow, requestUsers, unfollow} from \"../../redux/users-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsersFilter,\r\n    getUsersSuperSelector\r\n} from \"../../redux/users-selectors\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport * as queryString from \"querystring\";\r\n\r\ntype PropsType = {}\r\n\r\ntype QueryParamsType = { term?: string; page?: string; friend?: string };\r\nexport const Users: React.FC<PropsType> = (props) => {\r\n\r\n    const users = useSelector(getUsersSuperSelector)\r\n    const totalUsersCount = useSelector(getTotalUsersCount)\r\n    const currentPage = useSelector(getCurrentPage)\r\n    const pageSize = useSelector(getPageSize)\r\n    const filter = useSelector(getUsersFilter)\r\n    const followingInProgress = useSelector(getFollowingInProgress)\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n\r\n    useEffect(() => {\r\n        const parsed = queryString.parse(history.location.search.substr(1)) as QueryParamsType\r\n        // console.log(parsed)\r\n\r\n        let actualPage = currentPage\r\n        let actualFilter = filter\r\n\r\n        if (!!parsed.page) actualPage = Number(parsed.page)\r\n\r\n        if (!!parsed.term) actualFilter = {...actualFilter, term: parsed.term as string}\r\n\r\n        if (!!parsed.friend) actualFilter = {\r\n            ...actualFilter,\r\n            friend: parsed.friend === \"null\" ? null : parsed.friend === \"true\" ? true : false\r\n        }\r\n\r\n\r\n        dispatch(requestUsers(actualPage, pageSize, actualFilter));\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const query: QueryParamsType = {}\r\n        if (!!filter.term) query.term = filter.term\r\n        if (filter.friend !== null) query.friend = String(filter.friend)\r\n        if (currentPage !== 1) query.page = String(currentPage)\r\n\r\n            history.push({\r\n                pathname: \"/developers\",\r\n                search: queryString.stringify(query)\r\n            })\r\n    }, [filter, currentPage])\r\n\r\n\r\n    const onFilterChanged = (filter: FilterType) => {\r\n        dispatch(requestUsers(1, pageSize, filter));\r\n    }\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(requestUsers(pageNumber, pageSize, filter));\r\n    }\r\n\r\n    const followUser = (userId: number) => {\r\n        dispatch(follow(userId))\r\n    }\r\n    const unfollowUser = (userId: number) => {\r\n        dispatch(unfollow(userId))\r\n\r\n    }\r\n\r\n\r\n    return <div className={s.users}>\r\n        <UsersSearchForm onFilterChanged={onFilterChanged}/>\r\n        <div className={s.paginatorUsers}>\r\n            <Paginator currentPage={currentPage}\r\n                       onPageChanged={onPageChanged}\r\n                       totalItemsCount={totalUsersCount}\r\n                       pageSize={pageSize}\r\n            />\r\n        </div>\r\n        <div>\r\n            {\r\n                users.map(u => <User key={u.id}\r\n                                     user={u}\r\n                                     followingInProgress={followingInProgress}\r\n                                     unfollow={unfollowUser}\r\n                                     follow={followUser}\r\n                />)\r\n            }\r\n        </div>\r\n    </div>\r\n}","import {useSelector} from \"react-redux\";\r\nimport React from \"react\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {getIsFetching} from \"../../redux/users-selectors\";\r\nimport {Users} from \"./Users\";\r\n\r\ntype UsersPagePropsType = {\r\n    pageTitle: string\r\n}\r\n\r\n\r\nexport const UsersPage: React.FC<UsersPagePropsType> = (props) => {\r\n\r\n    const isFetching = useSelector(getIsFetching)\r\n\r\n    return <>\r\n        <h2>{props.pageTitle}</h2>\r\n        {isFetching ? <Preloader/> : null}\r\n        <Users />\r\n    </>\r\n\r\n}","import React from \"react\";\r\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {createField, GetStringKeyS, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from \"./../common/FormsControls/FormsControls.module.css\"\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\ntype LoginFormOwnProps = {\r\n    captchaUrl: string | null\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType, LoginFormOwnProps> & LoginFormOwnProps> =\r\n    ({handleSubmit, error, captchaUrl}) => {\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n\r\n                {createField<LoginFormValuesTypeKeys>(\"Email\", \"email\", [required], Input)}\r\n                {createField<LoginFormValuesTypeKeys>(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n                {createField<LoginFormValuesTypeKeys>(undefined, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n\r\n                {captchaUrl && <img alt={\"\"} src={captchaUrl}/>}\r\n                {captchaUrl && createField<LoginFormValuesTypeKeys>(\"Captcha text\", \"captcha\", [required], Input, {})\r\n                }\r\n                {/*{captchaUrl && <Field placeholder={\"Captcha text\"}*/}\r\n                {/*                      name={\"captcha\"}*/}\r\n                {/*                      component={Input}*/}\r\n                {/*/>}*/}\r\n\r\n\r\n                {error && <div className={s.formSummaryError}>\r\n                    {error}\r\n                </div>}\r\n                <div>\r\n                    <button>Login</button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnProps>({form: 'login'})(LoginForm);\r\n\r\nexport type LoginFormValuesType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\ntype LoginFormValuesTypeKeys = GetStringKeyS<LoginFormValuesType>\r\n\r\nexport const LoginPage: React.FC = (props) => {\r\n    const captchaUrl = useSelector((state: AppStateType) => state.auth.captchaUrl)\r\n    const isAuth = useSelector((state: AppStateType) => state.auth.isAuth)\r\n    const dispatch = useDispatch()\r\n\r\n    const onSubmit = (formData: LoginFormValuesType) => {\r\n        dispatch(login(formData.email, formData.password, formData.rememberMe, formData.captcha))\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl}/>\r\n    </div>\r\n}","import React from \"react\";\r\n// import s from \"./Settings.module.css\";\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            <p>Settings</p>\r\n        </div>\r\n    );\r\n};\r\nexport default Settings;","import React from \"react\";\r\n// import s from \"./News.module.css\";\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            <p>News</p>\r\n        </div>\r\n    );\r\n};\r\nexport default News;","import {createSelector} from \"reselect\"\r\nimport {AppStateType} from \"./redux-store\"\r\n\r\nexport const selectIsAuth = (state: AppStateType) => {\r\n    return state.auth.isAuth\r\n}\r\nexport const selectCurrentUserLogin = (state: AppStateType) => {\r\n    return state.auth.login\r\n}\r\n","import React from \"react\";\r\nimport s from \"./Header.module.css\";\r\nimport {Link, NavLink} from \"react-router-dom\";\r\nimport {Avatar, Button, Col, Layout, Menu, Row} from \"antd\";\r\nimport {selectCurrentUserLogin, selectIsAuth} from \"../../redux/auth-selectors\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nexport type MapPropsType = {}\r\n\r\nexport const Header: React.FC<MapPropsType> = (props) => {\r\n\r\n    const isAuth = useSelector(selectIsAuth)\r\n    const login = useSelector(selectCurrentUserLogin)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutCallback = () => {\r\n        dispatch(logout())\r\n    }\r\n    const {Header} = Layout\r\n\r\n    return (\r\n        <Header className=\"header\">\r\n            <Row>\r\n                <Col span={18}>\r\n                    <Menu\r\n                        theme=\"dark\"\r\n                        mode=\"horizontal\"\r\n                        defaultSelectedKeys={['2']}\r\n                        style={{lineHeight: '64px'}}>\r\n\r\n                        <Menu.Item key=\"1\">\r\n                            <Link to=\"/developers\">\r\n                                Developers\r\n                            </Link>\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                </Col>\r\n\r\n\r\n                {isAuth ?\r\n                    <>\r\n                        <Col span={2}>\r\n                            <Avatar style={{backgroundColor: '#87d068'}} icon=\"user\"/>\r\n                        </Col>\r\n                        <Col span={2}>\r\n                            <p className={s.login}>{login}</p>\r\n                        </Col>\r\n                        <Col span={2}>\r\n                            <Button onClick={logoutCallback}>Log out</Button>\r\n                        </Col>\r\n                    </>\r\n\r\n                    : <><Col span={4}></Col>\r\n                        <Col span={2}>\r\n                            <Button>\r\n                                <Link to={'/login'}>Login</Link>\r\n                            </Button>\r\n                        </Col>\r\n                    </>}\r\n\r\n            </Row>\r\n        </Header>\r\n\r\n        // <header className={s.app_header}>\r\n        //     <img\r\n        //         src=\"https://github.com/PirialMersus/frontend-js/blob/master/menu/img/logo.png?raw=true\"\r\n        //         alt=\"logo\"\r\n        //     />\r\n        //     <div className={s.loginBlock}>\r\n        //         {props.isAuth\r\n        //             ? <div className={s.loginBlock_accPlusLogout}><p>{props.login}</p>\r\n        //                 <button onClick={props.logout}>Log out</button>\r\n        //             </div>\r\n        //             : <NavLink to={'/login'}>Login</NavLink>}\r\n        //     </div>\r\n        // </header>\r\n    )\r\n}","/* eslint-disable jsx-a11y/alt-text */\nimport React from \"react\";\nimport \"antd/dist/antd.css\";\n\nimport \"./App.css\";\n\nimport {BrowserRouter, Link, NavLink, Redirect, Route, Switch} from \"react-router-dom\";\nimport {connect, Provider} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store, {AppStateType} from \"./redux/redux-store\";\nimport {withSuspense} from \"./components/hoc/withSuspense\";\nimport {Avatar, Breadcrumb, Col, Icon, Layout, Menu, Row} from 'antd';\nimport {UsersPage} from \"./components/Users/UsersContainer\";\nimport {LoginPage} from \"./components/Login/Login\";\nimport Settings from \"./components/Settings/Settings\";\nimport News from \"./components/News/News\";\nimport s from \"./components/Navbar/Navbar.module.css\";\nimport {Header} from \"./components/Header/Header\";\n// import ChatPage from \"./pages/Chat/ChatPage\";\n\nconst {SubMenu} = Menu;\nconst {Content, Footer, Sider} = Layout;\n\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\nconst ChatPage= React.lazy(() => import(\"./pages/Chat/ChatPage\"));\n\ntype MapPropsType = ReturnType<typeof mapStateToProps>\ntype DispatchPropsType = {\n    initializeApp: () => void\n}\n\nconst SuspendedDialogs = withSuspense(DialogsContainer);\nconst SuspendedProfile = withSuspense(ProfileContainer);\nconst SuspendedChatPage = withSuspense(ChatPage);\n\nclass App extends React.Component<MapPropsType & DispatchPropsType> {\n\n    catchAllUnhandledErrors = (e: PromiseRejectionEvent) => {\n        alert(e.reason.message);\n    }\n\n    componentDidMount() {\n\n        this.props.initializeApp();\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n\n        return (\n            <BrowserRouter>\n                <Layout>\n                    <Header/>\n                    <Content style={{padding: '0 50px'}}>\n                        <Breadcrumb style={{margin: '16px 0'}}>\n                            <Breadcrumb.Item>Home</Breadcrumb.Item>\n                            <Breadcrumb.Item>List</Breadcrumb.Item>\n                            <Breadcrumb.Item>App</Breadcrumb.Item>\n                        </Breadcrumb>\n                        <Layout style={{padding: '24px 0', background: '#fff'}}>\n                            <Sider width={200} style={{background: '#fff'}}>\n                                <Menu\n                                    mode=\"inline\"\n                                    style={{height: '100%'}}\n                                >\n                                    {/*<ul className={s.navList}>*/}\n                                    {/*    <li className={s.item}>*/}\n                                    {/*        <Link to=\"/profile\">*/}\n                                    {/*            Profile*/}\n                                    {/*        </Link>*/}\n                                    {/*    </li>*/}\n                                    {/*    <li className={`${s.item} ${s.active}`}>*/}\n                                    {/*        <Link to=\"/dialogs\">*/}\n                                    {/*            Messages*/}\n                                    {/*        </Link>*/}\n                                    {/*    </li>*/}\n                                    {/*    <li className={s.item}>*/}\n                                    {/*        <Link to=\"/news\">*/}\n                                    {/*            News*/}\n                                    {/*        </Link>*/}\n                                    {/*    </li>*/}\n                                    {/*    <li className={s.item}>*/}\n                                    {/*        <Link to=\"/music\">*/}\n                                    {/*            Music*/}\n                                    {/*        </Link>*/}\n                                    {/*    </li>*/}\n                                    {/*    <li className={s.item}>*/}\n                                    {/*        <Link to=\"/users\">*/}\n                                    {/*            Users*/}\n                                    {/*        </Link>*/}\n                                    {/*    </li>*/}\n                                    {/*    <li className={s.item}>*/}\n                                    {/*        <Link to=\"/settings\">*/}\n                                    {/*            Settings*/}\n                                    {/*        </Link>*/}\n                                    {/*    </li>*/}\n                                    {/*</ul>*/}\n\n                                    <SubMenu\n                                        key=\"sub1\"\n                                        title={\n                                            <span>\n                                                <Icon type=\"user\"/>\n                                                My profile\n                                            </span>\n                                        }\n                                    >\n                                        <Menu.Item key=\"1\">\n                                            <NavLink to=\"/profile\" activeClassName={s.activeLink}>\n                                                Profile\n                                            </NavLink>\n                                        </Menu.Item>\n                                        <Menu.Item key=\"2\">\n                                            <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>\n                                                Messages\n                                            </NavLink>\n                                        </Menu.Item>\n                                        <Menu.Item key=\"3\">\n                                            <NavLink to=\"/news\" activeClassName={s.activeLink}>\n                                                News\n                                            </NavLink>\n                                        </Menu.Item>\n                                        <Menu.Item key=\"4\">\n                                            <NavLink to=\"/music\" activeClassName={s.activeLink}>\n                                                Music\n                                            </NavLink>\n                                        </Menu.Item>\n                                    </SubMenu>\n                                    <SubMenu\n                                        key=\"sub2\"\n                                        title={\n                                            <span>\n                                                <Icon type=\"laptop\"/>\n                                                Developers\n                                            </span>\n                                        }\n                                    >\n                                        <Menu.Item key=\"5\">\n                                            <Link to=\"/developers\">\n                                                Developers\n                                            </Link>\n                                        </Menu.Item>\n                                        <Menu.Item key=\"6\">option6</Menu.Item>\n                                        <Menu.Item key=\"7\">option7</Menu.Item>\n                                        <Menu.Item key=\"8\">option8</Menu.Item>\n                                    </SubMenu>\n                                    <SubMenu\n                                        key=\"sub3\"\n                                        title={\n                                            <span>\n                                              <Icon type=\"notification\"/>\n                                              subnav 3\n                                            </span>\n                                        }\n                                    >\n                                        <Menu.Item key=\"9\">\n                                            <Link to=\"/chat\">\n                                                Chat\n                                            </Link>\n                                        </Menu.Item>\n                                        <Menu.Item key=\"10\">option10</Menu.Item>\n                                        <Menu.Item key=\"11\">option11</Menu.Item>\n                                        <Menu.Item key=\"12\">option12</Menu.Item>\n                                    </SubMenu>\n                                </Menu>\n                            </Sider>\n                            <Content style={{padding: '0 24px', minHeight: 280}}>\n                                <Switch>\n                                    <Route\n                                        exact path=\"/\"\n                                        render={() => <Redirect to={\"/profile\"}/>}\n                                    />\n                                    <Route\n                                        path=\"/profile/:userId?\"\n                                        render={() => <SuspendedProfile/>}\n                                    />\n                                    <Route\n                                        path=\"/dialogs\"\n                                        render={() => <SuspendedDialogs/>}\n                                    />\n                                    <Route\n                                        path=\"/developers\"\n                                        render={() => (\n                                            <UsersPage pageTitle={\"Samurai\"}/>\n                                        )}\n                                    />\n                                    <Route\n                                        path=\"/login\"\n                                        render={() => (\n                                            <LoginPage/>\n                                        )}\n                                    />\n                                    <Route path=\"/settings\" render={() => <Settings/>}/>\n                                    <Route path=\"/news\" render={() => <News/>}/>\n                                    <Route path=\"/music\" render={() =>\n                                        <div>Music</div>\n                                        // <Music/>}\n                                    }/>\n                                    <Route\n                                        path=\"/chat\"\n                                        render={() => (\n                                            <SuspendedChatPage/>\n                                        )}\n                                    />\n                                    <Route path=\"*\" render={() => <div>404 NOT FOUND\n                                    </div>}/>\n                                </Switch>\n                            </Content>\n                        </Layout>\n                    </Content>\n                    <Footer\n                        style={{textAlign: 'center'}}>Developers Social Network ©2020 Created by G Fesenko</Footer>\n                </Layout>\n                {/*<div className=\"app-wrapper\">*/}\n                {/*    <HeaderContainer/>*/}\n                {/*    <NavbarContainer/>*/}\n                {/*    <div className=\"app-wrapper-content\">*/}\n                {/*        <Switch>*/}\n                {/*            <Route*/}\n                {/*                exact path=\"/\"*/}\n                {/*                render={() => <Redirect to={\"/profile\"}/>}*/}\n                {/*            />*/}\n                {/*            <Route*/}\n                {/*                path=\"/profile/:userId?\"*/}\n                {/*                render={() => <SuspendedProfile />}*/}\n                {/*            />*/}\n                {/*            <Route*/}\n                {/*                path=\"/dialogs\"*/}\n                {/*                render={() => <SuspendedDialogs />}*/}\n                {/*            />*/}\n                {/*            <Route*/}\n                {/*                path=\"/users\"*/}\n                {/*                render={() => (*/}\n                {/*                    <UsersPage pageTitle={\"Samurai\"}/>*/}\n                {/*                )}*/}\n                {/*            />*/}\n                {/*            <Route*/}\n                {/*                path=\"/login\"*/}\n                {/*                render={() => (*/}\n                {/*                    <LoginPage />*/}\n                {/*                )}*/}\n                {/*            />*/}\n                {/*            <Route path=\"/settings\" render={() => <Settings/>}/>*/}\n                {/*            <Route path=\"/news\" render={() => <News/>}/>*/}\n                {/*            <Route path=\"/music\" render={() =>*/}\n                {/*                <div>Music</div>*/}\n                {/*                // <Music/>}*/}\n                {/*            }/>*/}\n                {/*            <Route path=\"*\" render={() => <div>404 NOT FOUND*/}\n                {/*                </div>}/>*/}\n                {/*        </Switch>*/}\n                {/*    </div>*/}\n                {/*</div>*/}\n            </BrowserRouter>\n        )\n            ;\n    }\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n    initialized: state.app.initialized\n})\n\nconst AppContainer = connect(mapStateToProps, {initializeApp})(App);\n\nexport const SamuraiJsApp: React.FC = () => {\n    return <Provider store={store}>\n        <AppContainer/>\n    </Provider>\n}\n\n","import \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {SamuraiJsApp} from \"./App\";\n\n\nReactDOM.render(\n    <SamuraiJsApp />,\n    document.getElementById(\"root\")\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import preloader from \"../../../assets/images/loading.svg\";\r\nimport React from \"react\";\r\n\r\ntype PropsType = {\r\n}\r\n\r\n\r\nlet Preloader: React.FC = () => {\r\n    return <img alt={\"\"} src={preloader}/>\r\n}\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1SDyZ\",\"error\":\"FormsControls_error__cTaDO\",\"formSummaryError\":\"FormsControls_formSummaryError__1pKVV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__2x1XG\",\"photoUser\":\"Users_photoUser__2oo1c\",\"pageNumbers\":\"Users_pageNumbers__1JgmY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app_nav\":\"Navbar_app_nav__MvB8r\",\"navList\":\"Navbar_navList__t5k0U\",\"item\":\"Navbar_item__3-bYs\",\"activeLink\":\"Navbar_activeLink__3L5WZ\",\"friends\":\"Navbar_friends__zAibx\",\"friendsItems\":\"Navbar_friendsItems__3qudn\"};"],"sourceRoot":""}